DROP TABLE IF EXISTS org;
DROP TABLE IF EXISTS perm;
DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS perm_linker;
DROP TABLE IF EXISTS patient;
DROP TABLE IF EXISTS res;
DROP TABLE IF EXISTS report;

CREATE TABLE org (
  slug VARCHAR(32) PRIMARY KEY,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

  name VARCHAR(32)
);

CREATE TABLE perm (
  slug VARCHAR(32) PRIMARY KEY,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

  name VARCHAR(32)
);

CREATE TABLE user (
  username VARCHAR(32) PRIMARY KEY,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

  password VARCHAR(64) NOT NULL,

  org VARCHAR(32),
  FOREIGN KEY (org) REFERENCES org (slug)
);

CREATE TABLE perm_linker (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

  username VARCHAR(32),
  perm VARCHAR(32),
  FOREIGN KEY (username) REFERENCES user (username),
  FOREIGN KEY (perm) REFERENCES perm (slug)
);

CREATE TABLE patient (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

  phone VARCHAR(11),
  name VARCHAR(32),
  gender VARCHAR(32),

  creator_user VARCHAR(32),
  FOREIGN KEY (creator_user) REFERENCES user (username)
);

CREATE TABLE res (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

    start
)

CREATE TABLE report (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

  patient INTEGER,
  creator_user VARCHAR(32),
  FOREIGN KEY (patient) REFERENCES patient (id),
  FOREIGN KEY (creator_user) REFERENCES user (username)
);
